#!/usr/bin/python
import re
from Lexic import Lexic

class Nodo(object):
    simbolo = ''
    sig = ''

class Syntactico(Nodo):

    def __init__(self,cadena):
        self.lexico = Lexic(cadena)
        self.lexico.nextSymbol()
    
    def obtenColumna(self,entrada):
        nt = ['A','B','C','D','E','F','G','K','L','M','N','O','P','Q','R','S','T','U','V','W']
        try:
            i={'':'\n','or':'a','and':'b','==':'q','<=':'l','>=':'g','if':'x','else':'y','while':'z'}
            entrada = i[entrada]
            sim = True
        except:
            sim = False
        if not sim:
            if not entrada in nt:
                typ = self.lexico.getType(entrada)
                if typ == 10:
                    entrada = 't'
                elif typ in [1,2,4]:
                    entrada = 'n'
                elif typ == 3:
                    entrada = 'i'
        for index in range(len(self.indice)):
            if re.match(self.indice[index], entrada):
                return index
        print 'Error'
        return 'error'

    def analiza(self):
        pila = [0]
        while True:
            try:
                columna = self.obtenColumna(self.lexico.symbol)
                accion = self.matriz[pila[-1]][columna]
                len(accion)
            except:
                print 'Error'
                break
            else:
                if accion[0] == 's':
                    pila.append(self.lexico.symbol)
                    pila.append(int(accion[1:]))
                    self.lexico.nextSymbol()
                elif accion[0] == 'r':
                    regla = self.reglas[int(accion[1:])]
                    izquierda = regla.keys()[0]
                    tamano = len(regla[izquierda]) * 2
                    for c in range(tamano):
                        pila.pop()
                    pila.append(izquierda)
                    pila.append(self.matriz[pila[-2]][self.obtenColumna(pila[-1])])
                else:
                    print 'Accept'
                    break

    indice = ['\(','\)','\*','\+',',',  '-','/',';','<','=','>','a','b', '!','g', 'i','l', 'n','q', 't', 'x','y', 'z','\{','\}','\n','A','B','C','D','E','F','G','H','J','K','L','M','N','O','P','Q','R','S','T','U','V','W']

    matriz = [
            ['r2',-1,-1,-1,-1,'r2',-1,-1,-1,-1,-1,-1,-1,'r2',-1,'r2',-1,'r2',-1,'r2','r2',-1,'r2',-1,'r2','r2',1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
            ['s2',-1,-1,-1,-1,'s3',-1,-1,-1,-1,-1,-1,-1,'s16',-1,'s17',-1,'s18',-1,'s19','s20',-1,'s21',-1,-1,'acc',-1,-1,-1,4,-1,-1,-1,-1,-1,5,6,7,8,9,10,11,12,13,14,15,-1,-1],
            ['s2',-1,-1,-1,-1,'s3',-1,-1,-1,-1,-1,-1,-1,'s16',-1,'s17',-1,'s18',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,22,6,7,8,9,10,11,12,13,14,15,-1,-1],
            ['s2',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,'s17',-1,'s18',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,23,15,-1,-1],
            ['r1',-1,-1,-1,-1,'r1',-1,-1,-1,-1,-1,-1,-1,'r1',-1,'r1',-1,'r1',-1,'r1','r1',-1,'r1',-1,'r1','r1',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
            [-1,-1,-1,-1,-1,-1,-1,'s24',-1,'s25',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
            [-1,'r18',-1,-1,'r18',-1,-1,'r18',-1,'r18',-1,'s26',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
            [-1,'r20',-1,-1,'r20',-1,-1,'r20',-1,'r20',-1,'r20','s27',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
            [-1,'r22',-1,-1,'r22',-1,-1,'r22',-1,'r22',-1,'r22','r22',-1,-1,-1,-1,-1,'s28',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
            [-1,'r24',-1,-1,'r24',-1,-1,'r24','s29','r24','s30','r24','r24',-1,'s31',-1,'s32',-1,'r24',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
            [-1,'r29',-1,'s33','r29','s34',-1,'r29','r29','r29','r29','r29','r29',-1,'r29',-1,'r29',-1,'r29',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
            [-1,'r32',-1,'r32','r32','r32',-1,'r32','r32','r32','r32','r32','r32',-1,'r32',-1,'r32',-1,'r32',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
            [-1,'r33','s35','r33','r33','r33','s36','r33','r33','r33','r33','r33','r33',-1,'r33',-1,'r33',-1,'r33',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
            [-1,'r36','r36','r36','r36','r36','r36','r36','r36','r36','r36','r36','r36',-1,'r36',-1,'r36',-1,'r36',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
            [-1,'r39','r39','r39','r39','r39','r39','r39','r39','r39','r39','r39','r39',-1,'r39',-1,'r39',-1,'r39',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
            [-1,'r41','r41','r41','r41','r41','r41','r41','r41','r41','r41','r41','r41',-1,'r41',-1,'r41',-1,'r41',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
            ['s2',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,'s17',-1,'s18',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,37,15,-1,-1],
            ['s38','r42','r42','r42','r42','r42','r42','r42','r42','r42','r42','r42','r42',-1,'r42',-1,'r42',-1,'r42',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
            [-1,'r43','r43','r43','r43','r43','r43','r43','r43','r43','r43','r43','r43',-1,'r43',-1,'r43',-1,'r43',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
            [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,'s39',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
            ['s40',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
            ['s41',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
            [-1,'s42',-1,-1,-1,-1,-1,-1,-1,'s25',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
            [-1,'r37','r37','r37','r37','r37','r37','r37','r37','r37','r37','r37','r37',-1,'r37',-1,'r37',-1,'r37',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
            ['r16',-1,-1,-1,-1,'r16',-1,-1,-1,-1,-1,-1,-1,'r16',-1,'r16',-1,'r16',-1,'r16','r16',-1,'r16',-1,'r16','r16',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
            ['s2',-1,-1,-1,-1,'s3',-1,-1,-1,-1,-1,-1,-1,'s16',-1,'s17',-1,'s18',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,43,7,8,9,10,11,12,13,14,15,-1,-1],
            ['s2',-1,-1,-1,-1,'s3',-1,-1,-1,-1,-1,-1,-1,'s16',-1,'s17',-1,'s18',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,44,8,9,10,11,12,13,14,15,-1,-1],
            ['s2',-1,-1,-1,-1,'s3',-1,-1,-1,-1,-1,-1,-1,'s16',-1,'s17',-1,'s18',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,45,9,10,11,12,13,14,15,-1,-1],
            ['s2',-1,-1,-1,-1,'s3',-1,-1,-1,-1,-1,-1,-1,'s16',-1,'s17',-1,'s18',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,46,10,11,12,13,14,15,-1,-1],
            ['s2',-1,-1,-1,-1,'s3',-1,-1,-1,-1,-1,-1,-1,'s16',-1,'s17',-1,'s18',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,47,11,12,13,14,15,-1,-1],
            ['s2',-1,-1,-1,-1,'s3',-1,-1,-1,-1,-1,-1,-1,'s16',-1,'s17',-1,'s18',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,48,11,12,13,14,15,-1,-1],
            ['s2',-1,-1,-1,-1,'s3',-1,-1,-1,-1,-1,-1,-1,'s16',-1,'s17',-1,'s18',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,49,11,12,13,14,15,-1,-1],
            ['s2',-1,-1,-1,-1,'s3',-1,-1,-1,-1,-1,-1,-1,'s16',-1,'s17',-1,'s18',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,50,11,12,13,14,15,-1,-1],
            ['s2',-1,-1,-1,-1,'s3',-1,-1,-1,-1,-1,-1,-1,'s16',-1,'s17',-1,'s18',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,51,12,13,14,15,-1,-1],
            ['s2',-1,-1,-1,-1,'s3',-1,-1,-1,-1,-1,-1,-1,'s16',-1,'s17',-1,'s18',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,52,12,13,14,15,-1,-1],
            ['s2',-1,-1,-1,-1,'s3',-1,-1,-1,-1,-1,-1,-1,'s16',-1,'s17',-1,'s18',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,53,14,15,-1,-1],
            ['s2',-1,-1,-1,-1,'s3',-1,-1,-1,-1,-1,-1,-1,'s16',-1,'s17',-1,'s18',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,54,14,15,-1,-1],
            [-1,'r38','r38','r38','r38','r38','r38','r38','r38','r38','r38','r38','r38',-1,'r38',-1,'r38',-1,'r38',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
            ['s2','r52',-1,-1,-1,'s3',-1,-1,-1,-1,-1,-1,-1,'s16',-1,'s17',-1,'s18',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,55,-1,56,6,7,8,9,10,11,12,13,14,15,-1,-1],
            ['s57',-1,-1,-1,'s58',-1,-1,'s59',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,60,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
            ['s2',-1,-1,-1,-1,'s3',-1,-1,-1,-1,-1,-1,-1,'s16',-1,'s17',-1,'s18',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,61,6,7,8,9,10,11,12,13,14,15,-1,-1],
            ['s2',-1,-1,-1,-1,'s3',-1,-1,-1,-1,-1,-1,-1,'s16',-1,'s17',-1,'s18',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,62,6,7,8,9,10,11,12,13,14,15,-1,-1],
            [-1,'r40','r40','r40','r40','r40','r40','r40','r40','r40','r40','r40','r40',-1,'r40',-1,'r40',-1,'r40',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
            [-1,'r17',-1,-1,'r17',-1,-1,'r17',-1,'r17',-1,'s26',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
            [-1,'r19',-1,-1,'r19',-1,-1,'r19',-1,'r19',-1,'r19','s27',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
            [-1,'r21',-1,-1,'r21',-1,-1,'r21',-1,'r21',-1,'r21','r21',-1,-1,-1,-1,-1,'s28',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
            [-1,'r23',-1,-1,'r23',-1,-1,'r23','s29','r23','s30','r23','r23',-1,'s31',-1,'s32',-1,'r23',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
            [-1,'r25',-1,'s33','r25','s34',-1,'r25','r25','r25','r25','r25','r25',-1,'r25',-1,'r25',-1,'r25',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
            [-1,'r27',-1,'s33','r27','s34',-1,'r27','r27','r27','r27','r27','r27',-1,'r27',-1,'r27',-1,'r27',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
            [-1,'r28',-1,'s33','r28','s34',-1,'r28','r28','r28','r28','r28','r28',-1,'r28',-1,'r28',-1,'r28',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
            [-1,'r26',-1,'s33','r26','s34',-1,'r26','r26','r26','r26','r26','r26',-1,'r26',-1,'r26',-1,'r26',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
            [-1,'r30',-1,'r30','r30','r30',-1,'r30','r30','r30','r30','r30','r30',-1,'r30',-1,'r30',-1,'r30',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
            [-1,'r31',-1,'r31','r31','r31',-1,'r31','r31','r31','r31','r31','r31',-1,'r31',-1,'r31',-1,'r31',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
            [-1,'r34','r34','r34','r34','r34','r34','r34','r34','r34','r34','r34','r34',-1,'r34',-1,'r34',-1,'r34',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
            [-1,'r35','r35','r35','r35','r35','r35','r35','r35','r35','r35','r35','r35',-1,'r35',-1,'r35',-1,'r35',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
            [-1,'s63',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
            [-1,'r51',-1,-1,'s64',-1,-1,-1,-1,'s25',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,65,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
            [-1,'r12',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,'s67',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,66,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
            [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,'s68',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
            ['r53',-1,-1,-1,-1,'r53',-1,-1,-1,-1,-1,-1,-1,'r53',-1,'r53',-1,'r53',-1,'r53','r53',-1,'r53',-1,'r53','r53',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
            ['r9',-1,-1,-1,-1,'r9',-1,-1,-1,-1,-1,-1,-1,'r9',-1,'r9',-1,'r9',-1,'r9','r9',-1,'r9',-1,'r9','r9',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
            [-1,'s69',-1,-1,-1,-1,-1,-1,-1,'s25',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
            [-1,'s70',-1,-1,-1,-1,-1,-1,-1,'s25',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
            [-1,'r47','r47','r47','r47','r47','r47','r47','r47','r47','r47','r47','r47',-1,'r47',-1,'r47',-1,'r47',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
            ['s2',-1,-1,-1,-1,'s3',-1,-1,-1,-1,-1,-1,-1,'s16',-1,'s17',-1,'s18',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,71,6,7,8,9,10,11,12,13,14,15,-1,-1],
            [-1,'r48',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
            [-1,'s72',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
            [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,'s73',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
            [-1,-1,-1,-1,'s58',-1,-1,'s74',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,75,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
            [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,'s79',-1,-1,-1,76,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,77,78],
            ['s2',-1,-1,-1,-1,'s3',-1,-1,-1,-1,-1,-1,-1,'s16',-1,'s17',-1,'s18',-1,'s19','s20',-1,'s21','s79',-1,-1,-1,80,81,82,-1,-1,-1,-1,-1,5,6,7,8,9,10,11,12,13,14,15,-1,-1],
            [-1,'r50',-1,-1,'s64',-1,-1,-1,-1,'s25',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,83,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
            ['s2',-1,-1,-1,-1,'s3',-1,-1,-1,-1,-1,-1,-1,'s16',-1,'s17',-1,'s18',-1,'s19','s20',-1,'s21','s79',-1,-1,-1,80,84,82,-1,-1,-1,-1,-1,5,6,7,8,9,10,11,12,13,14,15,-1,-1],
            [-1,'r7',-1,-1,'s85',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,86,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
            ['r11',-1,-1,-1,-1,'r11',-1,-1,-1,-1,-1,-1,-1,'r11',-1,'r11',-1,'r11',-1,'r11','r11',-1,'r11',-1,'r11','r11',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
            ['r10',-1,-1,-1,-1,'r10',-1,-1,-1,-1,-1,-1,-1,'r10',-1,'r10',-1,'r10',-1,'r10','r10',-1,'r10',-1,'r10','r10',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
            ['r46',-1,-1,-1,-1,'r46',-1,-1,-1,-1,-1,-1,-1,'r46',-1,'r46',-1,'r46',-1,'r46','r46','r46','r46',-1,'r46','r46',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
            ['r8',-1,-1,-1,-1,'r8',-1,-1,-1,-1,-1,-1,-1,'r8',-1,'r8',-1,'r8',-1,'r8','r8','s87','r8',-1,'r8','r8',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
            ['r45',-1,-1,-1,-1,'r45',-1,-1,-1,-1,-1,-1,-1,'r45',-1,'r45',-1,'r45',-1,'r45','r45','r45','r45',-1,'r45','r45',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
            ['r2',-1,-1,-1,-1,'r2',-1,-1,-1,-1,-1,-1,-1,'r2',-1,'r2',-1,'r2',-1,'r2','r2',-1,'r2',-1,'r2','r2',88,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
            ['r14',-1,-1,-1,-1,'r14',-1,-1,-1,-1,-1,-1,-1,'r14',-1,'r14',-1,'r14',-1,'r14','r14',-1,'r14',-1,'r14','r14',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
            ['r15',-1,-1,-1,-1,'r15',-1,-1,-1,-1,-1,-1,-1,'r15',-1,'r15',-1,'r15',-1,'r15','r15',-1,'r15',-1,'r15','r15',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
            ['r13',-1,-1,-1,-1,'r13',-1,-1,-1,-1,-1,-1,-1,'r13',-1,'r13',-1,'r13',-1,'r13','r13',-1,'r13',-1,'r13','r13',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
            [-1,'r49',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
            ['r4',-1,-1,-1,-1,'r4',-1,-1,-1,-1,-1,-1,-1,'r4',-1,'r4',-1,'r4',-1,'r4','r4',-1,'r4',-1,'r4','r4',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
            [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,'s89',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
            [-1,'r5',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
            [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,'s79',-1,-1,-1,76,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,90],
            ['s2',-1,-1,-1,-1,'s3',-1,-1,-1,-1,-1,-1,-1,'s16',-1,'s17',-1,'s18',-1,'s19','s20',-1,'s21',-1,'s91',-1,-1,-1,-1,4,-1,-1,-1,-1,-1,5,6,7,8,9,10,11,12,13,14,15,-1,-1],
            [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,'s92',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
            ['r44',-1,-1,-1,-1,'r44',-1,-1,-1,-1,-1,-1,-1,'r44',-1,'r44',-1,'r44',-1,'r44','r44','r44','r44',-1,'r44','r44',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
            ['r3',-1,-1,-1,-1,'r3',-1,-1,-1,-1,-1,-1,-1,'r3',-1,'r3',-1,'r3',-1,'r3','r3','r3','r3',-1,'r3','r3',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
            [-1,'r7',-1,-1,'s85',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,93,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
            [-1,'r6',-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
            ]

    reglas = [
            {'A`':'A'},
            {'A':'AD'},
            {'A':''},
            {'B':'{A}'},
            {'D':'ti(F)C'},
            {'F':'tiG'},
            {'G':',tiG'},
            {'G':''},
            {'D':'x(e)V'},
            {'D':'tiE'},
            {'E':',iE'},
            {'E':',i;'},
            {'F':''},
            {'C':'D'},
            {'C':'B'},
            {'D':'z(e)C'},
            {'D':'K;'},
            {'K':'K=L'},
            {'K':'L'},
            {'L':'LaM'},
            {'L':'M'},
            {'M':'MbN'},
            {'M':'N'},
            {'N':'NqO'},
            {'N':'O'},
            {'O':'O<P'},
            {'O':'OlP'},
            {'O':'O>P'},
            {'O':'OgP'},
            {'O':'P'},
            {'P':'P+Q'},
            {'P':'P-Q'},
            {'P':'Q'},
            {'Q':'R'},
            {'R':'R*S'},
            {'R':'R/S'},
            {'R':'S'},
            {'S':'dT'},
            {'S':'cT'},
            {'S':'T'},
            {'T':'(K)'},
            {'T':'U'},
            {'U':'i'},
            {'U':'n'},
            {'V':'VyW'},
            {'V':'W'},
            {'W':'B'},
            {'U':'i(H)'},
            {'H':'KJ'},
            {'J':',KJ'},
            {'J':',K'},
            {'H':'K'},
            {'H':''},
            {'D':'ti;'}
            ]

if __name__ == '__main__':
    while True:
        entrada = raw_input('>>>Entrada: ')
        if entrada == 'x':
            break
        syntactic = Syntactico(entrada)
        syntactic.analiza()

# vim: tabstop=4 expandtab shiftwidth=4 softtabstop=4

